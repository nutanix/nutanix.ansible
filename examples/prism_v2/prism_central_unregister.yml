# Summary:
# This playbook Unregister PC-PC connection (removing PC as availbility_zone)
# Before running playbook, the two PCs should be connected with availability_zone feature
# You need to provide two parameters:
# 1. ext_id: This is the availability_zone_pc_uuid (Secondary PC UUID)
# 2. pc_ext_id: This is the domain_manager_ext_id (Primary PC UUID)
# PC UUID (Primary or Secondary) can be fetched using nutanix.ncp.ntnx_clusters_info_v2 module
# To fetch ext_id, you can use nutanix.ncp.ntnx_clusters_info_v2 with nutanix_host as Secondary PC IP
# To fetch pc_ext_id, you can use nutanix.ncp.ntnx_clusters_info_v2 with nutanix_host as Primary PC IP
# you need to provide the filter parameter as "config/clusterFunction/any(t:t eq Clustermgmt.Config.ClusterFunctionRef'PRISM_CENTRAL')"

- name: Prism playbook
  hosts: localhost
  gather_facts: false
  module_defaults:
    group/nutanix.ncp.ntnx:
      nutanix_host: <pc_ip>
      nutanix_username: <user>
      nutanix_password: <pass>
      validate_certs: false
  tasks:
    - name: Setting Variables
      ansible.builtin.set_fact:
        availability_zone_pc_uuid: "869aa8a5-5aeb-423f-829d-f932d2656b6c"

    - name: List all clusters to get prism central external ID
      nutanix.ncp.ntnx_clusters_info_v2:
        filter: "config/clusterFunction/any(t:t eq Clustermgmt.Config.ClusterFunctionRef'PRISM_CENTRAL')"
      register: result
      ignore_errors: true

    - name: Get prism central external ID
      ansible.builtin.set_fact:
        domain_manager_ext_id: "{{ result.response[0].ext_id }}"

    - name: Unregister PC
      nutanix.ncp.ntnx_pc_unregistration_v2:
        ext_id: "{{ availability_zone_pc_uuid }}"
        pc_ext_id: "{{ domain_manager_ext_id }}"
      register: result
      ignore_errors: true
