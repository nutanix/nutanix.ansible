---
# Summary:
# This playbook will do:
# 1. Get the prism central external ID
# 2. Get the config of LCM
# 3. Update the config of LCM
# 4. Perform inventory of LCM
# 5. List all LCM entities details
# 6. List all LCM entities details with filter
# 7. Set LCM entity external ID
# 8. List all LCM entities details with limit
# 9. Fetch LCM entity using external ID
# 10. Get LCM status before doing prechecks
# 11. Perform LCM prechecks
# 12. Perform LCM upgrade
# Note: cluster_ext_id is used to get/precheck/upgrade the entities on the specific cluster.
# If we pass the Prism Element cluster ID, it will get the entities on that cluster. Otherwise, it will get the entities on the Prism Central.

- name: LCM playbook
  hosts: localhost
  gather_facts: false
  module_defaults:
    group/nutanix.ncp.ntnx:
      nutanix_host: <pc_ip>
      nutanix_username: <user>
      nutanix_password: <pass>
      validate_certs: false
  tasks:
    - name: Setting Variables
      ansible.builtin.set_fact:
        lcm_entity_model: "Calm Policy Engine"
        lcm_entity_model_version: "4.0.0"

    - name: List all clusters to get prism central external ID
      nutanix.ncp.ntnx_clusters_info_v2:
        filter: "config/clusterFunction/any(t:t eq Clustermgmt.Config.ClusterFunctionRef'PRISM_CENTRAL')"
      register: result
      ignore_errors: true

    - name: Get prism central external ID
      ansible.builtin.set_fact:
        prism_central_external_id: "{{ result.response[0].ext_id }}"

    - name: Get config of LCM
      nutanix.ncp.ntnx_lcm_config_info_v2:
      register: lcm_config_info
      ignore_errors: true

    - name: Update config of LCM
      nutanix.ncp.ntnx_lcm_config_v2:
        cluster_ext_id: "{{ prism_central_external_id }}"
        is_auto_inventory_enabled: false
        is_https_enabled: true
        has_module_auto_upgrade_enabled: false
      register: lcm_config_update
      ignore_errors: true

    - name: Perform inventory of LCM
      nutanix.ncp.ntnx_lcm_inventory_v2:
        cluster_ext_id: "{{ prism_central_external_id }}"
      register: lcm_inventory
      ignore_errors: true

    - name: List all LCM entities details
      nutanix.ncp.ntnx_lcm_entities_info_v2:
      register: lcm_entities
      ignore_errors: true

    - name: List all LCM entities details with filter
      nutanix.ncp.ntnx_lcm_entities_info_v2:
        filter: "entityModel eq '{{ lcm_entity_model }}'"
      register: lcm_entities
      ignore_errors: true

    - name: Set LCM entity external ID
      ansible.builtin.set_fact:
        lcm_entity_external_id: "{{ lcm_entities.response.data[0].ext_id }}"

    - name: List all LCM entities details with limit
      nutanix.ncp.ntnx_lcm_entities_info_v2:
        limit: 1
      register: lcm_entity
      ignore_errors: true

    - name: Fetch LCM entity using external ID
      nutanix.ncp.ntnx_lcm_entities_info_v2:
        ext_id: "{{ lcm_entity_external_id }}"
      register: lcm_entity
      ignore_errors: true

    - name: Get LCM status before doing prechecks
      nutanix.ncp.ntnx_lcm_status_info_v2:
      register: lcm_status
      ignore_errors: true

    - name: Perform LCM prechecks for doing certain entities upgrade
      nutanix.ncp.ntnx_lcm_prechecks_v2:
        entity_update_specs:
          - entity_uuid: "{{ lcm_entity_external_id }}"
            to_version: "{{ lcm_entity_model_version}}"
      register: lcm_prechecks
      ignore_errors: true

    - name: Perform LCM upgrade for the given entity chosen in previous tasks
      nutanix.ncp.ntnx_lcm_upgrades_v2:
        entity_update_specs:
          - entity_uuid: "{{ lcm_entity_external_id }}"
            to_version: "{{ lcm_entity_model_version }}"
      register: lcm_upgrade
      ignore_errors: true
