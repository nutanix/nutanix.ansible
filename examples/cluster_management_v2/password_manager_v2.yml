---
# Summary:
# This playbook will do:
# 1. List password status of all system users
# 2. List password status of system users with limit
# 3. List password status of system users with filter for admin
# 4. List password status of system users with filter for admin PC
# 5. Update password for admin PC user

- name: Password manager playbook
  hosts: localhost
  gather_facts: false
  module_defaults:
    group/nutanix.ncp.ntnx:
      nutanix_host: <pc_ip>
      nutanix_username: <user>
      nutanix_password: <pass>
      validate_certs: false
  tasks:
    - name: Setting Variables
      ansible.builtin.set_fact:
        old_password: "<old_password>"
        new_password: "<new_password>"

    - name: List password status of all system users
      nutanix.ncp.ntnx_password_managers_info_v2:
      register: result
      ignore_errors: true

    - name: List password status of system users with limit
      nutanix.ncp.ntnx_password_managers_info_v2:
        limit: 1
      register: result
      ignore_errors: true

    - name: List password status of system users with filter admin
      nutanix.ncp.ntnx_password_managers_info_v2:
        filter: "username eq 'admin'"
      register: result
      ignore_errors: true

    - name: List password status of system users with filter admin PC
      nutanix.ncp.ntnx_password_managers_info_v2:
        filter: "username eq 'admin' and systemType eq Clustermgmt.Config.SystemType'PC'"
      register: result
      ignore_errors: true

    - name: Store ext_id of the password manager
      ansible.builtin.set_fact:
        admin_pc_ext_id: "{{ result.response[0].ext_id }}"

    - name: Update password for admin PC user
      nutanix.ncp.ntnx_password_managers_v2:
        ext_id: "{{ admin_pc_ext_id }}"
        current_password: "{{ old_password }}"
        new_password: "{{ new_password }}"
      register: result
      ignore_errors: true