---
# Summary:
# This playbook will do:
# 1. Create Disk with storage container
# 2. Create Disk with image reference
# 3. Create Disk with disk reference
# 4. Create disk from volume group disk
# 5. Create Disk with VG reference
# 6. Update disk data source
# 7. Get disk info
# 8. Delete disk

- name: VM disks playbook
  hosts: localhost
  gather_facts: false
  module_defaults:
    group/nutanix.ncp.ntnx:
      nutanix_host: <pc_ip>
      nutanix_username: <user>
      nutanix_password: <pass>
      validate_certs: false
  tasks:
    - name: Setting Variables
      ansible.builtin.set_fact:
        vm_name: "VM name"
        storage_container_uuid: "223e4567-e89b-12d3-a456-426614174000"
        vm_uuid: "323e4567-e89b-12d3-a456-426614174001"
        image_uuid: "423e4567-e89b-12d3-a456-426614174002"
        image_uuid_for_update: "523e4567-e89b-12d3-a456-426614174003"
        disk_uuid: "623e4567-e89b-12d3-a456-426614174004"
        volume_group_uuid: "723e4567-e89b-12d3-a456-426614174005"

    - name: Create Disk in given storage container
      nutanix.ncp.ntnx_vms_disks_v2:
        vm_ext_id: "{{ vm_uuid }}"
        backing_info:
          vm_disk:
            disk_size_bytes: 26843545600
            storage_container:
              ext_id: "{{ storage_container_uuid }}"
        disk_address:
          bus_type: "SCSI"
          index: 1
        state: present
      register: result
      ignore_errors: true

    - name: Create Disk with image reference
      nutanix.ncp.ntnx_vms_disks_v2:
        vm_ext_id: "{{ vm_uuid }}"
        backing_info:
          vm_disk:
            disk_size_bytes: 26843545600
            storage_container:
              ext_id: "{{ storage_container_uuid }}"
            data_source:
              reference:
                image_reference:
                  image_ext_id: "{{ image_uuid }}"
        disk_address:
          bus_type: "SCSI"
          index: 2
        state: present
      register: result
      ignore_errors: true

    - name: Create disk from existing vm's disk
      nutanix.ncp.ntnx_vms_disks_v2:
        vm_ext_id: "{{ vm_uuid }}"
        backing_info:
          vm_disk:
            disk_size_bytes: 26843545600
            data_source:
              reference:
                vm_disk_reference:
                  disk_ext_id: "{{ disk_uuid }}"
                  vm_reference:
                    ext_id: "{{ vm_uuid }}"
                  disk_address:
                    bus_type: "SCSI"
                    index: 2
        disk_address:
          bus_type: "SCSI"
          index: 3
        state: present
      register: result
      ignore_errors: true

    - name: Create disk from volume group disk
      nutanix.ncp.ntnx_volume_groups_disks_v2:
        state: "present"
        volume_group_ext_id: "{{ volume_group_uuid }}"
        index: 6
        description: "Create disk from volume group disk description"
        disk_data_source_reference:
          entity_type: "STORAGE_CONTAINER"
          ext_id: "{{ storage_container_uuid }}"
        disk_size_bytes: 26843545600
      register: result
      ignore_errors: true

    - name: Create Disk with VG reference
      nutanix.ncp.ntnx_vms_disks_v2:
        vm_ext_id: "{{ vm_uuid }}"
        backing_info:
          adsf_volume_group:
            volume_group_ext_id: "{{ volume_group_uuid }}"
        disk_address:
          bus_type: "SCSI"
          index: 7
        state: present
      register: result
      ignore_errors: true

    - name: Update disk data source
      nutanix.ncp.ntnx_vms_disks_v2:
        vm_ext_id: "{{ vm_uuid }}"
        ext_id: "{{ disk_uuid }}"
        backing_info:
          vm_disk:
            storage_container:
              ext_id: "{{ storage_container_uuid }}"
            data_source:
              reference:
                image_reference:
                  image_ext_id: "{{ image_uuid_for_update }}"
        state: present
      register: result
      ignore_errors: true

    - name: Get disk info
      nutanix.ncp.ntnx_vms_disks_info_v2:
        vm_ext_id: "{{ vm_uuid }}"
        ext_id: "{{ disk_uuid }}"
      register: result
      ignore_errors: true

    - name: Delete disk
      nutanix.ncp.ntnx_vms_disks_v2:
        vm_ext_id: "{{ vm_uuid }}"
        ext_id: "{{ disk_uuid }}"
        state: absent
      register: result
      ignore_errors: true
