- name: Test Inventory Plugin
  hosts: all
  gather_facts: false
  vars_files:
    - nutanix.yaml
  tasks:
    - name: Assert the number of VMs in case of fetch_all_vms is false
      ansible.builtin.assert:
        that:
          - ansible_play_hosts | length <= data.length
        fail_msg: "No hosts found in inventory!"
        success_msg: "Found {{ ansible_play_hosts | length }} hosts in inventory!"
      run_once: true
      when: fetch_all_vms == false

    - name: Assert the number of VMs in case of fetch_all_vms is true
      ansible.builtin.assert:
        that:
          - ansible_play_hosts | length >= 0
        fail_msg: "No hosts found in inventory!"
        success_msg: "Found {{ ansible_play_hosts | length }} hosts in inventory!"
      run_once: true
      when: fetch_all_vms == true

    - name: Assert that host vars are defined like ansible_host, ansible_fqdn, uuid, name, cluster
      ansible.builtin.assert:
        that:
          - hostvars[inventory_hostname].ansible_host is defined
          - hostvars[inventory_hostname].ansible_fqdn is defined
          - hostvars[inventory_hostname].uuid is defined
          - hostvars[inventory_hostname].name is defined
          - hostvars[inventory_hostname].cluster is defined
        fail_msg: "Host vars not found for {{ inventory_hostname }}"
        success_msg: "Host vars found for {{ inventory_hostname }}"

    - name: Assert host groups
      ansible.builtin.assert:
        that:
          - hostvars[inventory_hostname].groups is defined
          - hostvars[inventory_hostname].groups | length >= 3
          - hostvars[inventory_hostname].groups.all is defined
          - hostvars[inventory_hostname].groups.all | length >= 0
          - hostvars[inventory_hostname].groups.group1 is defined
          - hostvars[inventory_hostname].groups.group2 is defined
          - hostvars[inventory_hostname].groups.group3 is defined
          - hostvars[inventory_hostname].groups.group1 | length +
            hostvars[inventory_hostname].groups.group2 | length +
            hostvars[inventory_hostname].groups.group3 | length ==
            hostvars[inventory_hostname].groups.all | length
          - hostvars[inventory_hostname].groups.group1 | intersect(hostvars[inventory_hostname].groups.group2) | length == 0
          - hostvars[inventory_hostname].groups.group1 | intersect(hostvars[inventory_hostname].groups.group3) | length == 0
          - hostvars[inventory_hostname].groups.group2 | intersect(hostvars[inventory_hostname].groups.group3) | length == 0
        fail_msg: "Hosts are not in the expected groups"
        success_msg: "Hosts are in the expected groups"
      run_once: true
