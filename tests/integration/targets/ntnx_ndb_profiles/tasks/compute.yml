---
- debug:
    msg: Start testing ntnx_ndb_profiles


################################################################
- name: Generate random profile_name
  set_fact:
    random_name: "{{query('community.general.random_string',numbers=false, special=false,length=12)[0]}}"

- set_fact:
    suffix_name: "ansible-role-mapping"

- set_fact:
    profile1_name: "{{random_name}}{{suffix_name}}1"
    profile2_name: "{{random_name}}{{suffix_name}}2"
################################################################
- name: Verify creation of compute profile with defaults in check mode
  ntnx_ndb_profiles:
    name: "{{profile1_name}}"
    desc: "testdesc"
    type: compute
  register: result
  ignore_errors: true
  check_mode: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response.name ==  "{{profile1_name}}"
      - result.response.description == "testdesc"
      - result.response.type == "Compute"
      - result.response.properties[0].name=="CPUS"
      - result.response.properties[1].name=="CORE_PER_CPU"
      - result.response.properties[2].name=="MEMORY_SIZE"
      - result.response.properties[0].value=="1"
      - result.response.properties[1].value=="2"
      - result.response.properties[2].value=="16"
    fail_msg: "Fail: unable to Verify creation of compute profile with defaults in check mode   "
    success_msg: "Pass: Verify creation of compute profile with defaults in check mode "
################################################################
- name: verify creation of compute profile
  ntnx_ndb_profiles:
    name: "{{profile1_name}}"
    desc: "testdesc"
    type: compute
    compute:
          vcpus: 2
          cores_per_cpu: 4
          memory: 8
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == true
      - result.profile_uuid is defined
      - result.response.name ==  "{{profile1_name}}"
      - result.response.description == "testdesc"
      - result.response.type == "Compute"
      - result.response.versions[0].propertiesMap.CORE_PER_CPU == "4"
      - result.response.versions[0].propertiesMap.CPUS == "2"
      - result.response.versions[0].propertiesMap.MEMORY_SIZE == "8"

    fail_msg: "Fail: create compute profile finished successfully "
    success_msg: "Pass: Unable to create compute profile"


- set_fact:
    todelete: "{{ todelete + [  result.profile_uuid ] }}"
################################################################
- name: verify update of params in compute profile and publish profile
  ntnx_ndb_profiles:
    name: "{{profile2_name}}"
    desc: "newdesc"
    profile_uuid: "{{result.profile_uuid}}"
    type: compute
    compute:
      vcpus: 6
      cores_per_cpu: 4
      memory: 5
      publish: true
  register: result
  ignore_errors: true


- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == true
      - result.profile_uuid is defined
      - result.response.profile.name ==  "{{profile2_name}}"
      - result.response.profile.description == "newdesc"
      - result.response.profile.type == "Compute"
      - result.response.version.propertiesMap.CORE_PER_CPU == "4"
      - result.response.version.propertiesMap.CPUS == "6"
      - result.response.version.propertiesMap.MEMORY_SIZE == "5"
      - result.response.version.published == true
    fail_msg: "Fail: unable to verify update of params in compute profile and publish profile"
    success_msg: "Pass:  verify update of params in compute profile and publish profile finished successfully"
################################################################
- name:  verify idempotency check  in compute profile
  ntnx_ndb_profiles:
    profile_uuid: "{{result.profile_uuid}}"
    name: "{{profile2_name}}"
    desc: "newdesc"
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.profile_uuid is defined
    fail_msg: "Fail: unable to verify idempotency check  in compute profile"
    success_msg: "Pass: verify idempotency check  in compute profile finished successfully"
################################################################
- name: verify unpublish flow in compute profile
  ntnx_ndb_profiles:
    profile_uuid: "{{result.profile_uuid}}"

    type: compute
    compute:
      publish: false
  register: result
  ignore_errors: true


- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == true
      - result.profile_uuid is defined
      - result.response.version.published == false
    fail_msg: "Fail: unable to verify unpublish flow in compute profile "
    success_msg: "Pass: verify unpublish flow in compute profile finished successfully"
################################################################
- name: Delete all created cmpute profiles
  ntnx_ndb_profiles:
    state: absent
    profile_uuid: "{{ item }}"
  register: result
  loop: "{{ todelete }}"
  ignore_errors: True

- name: check listing status
  assert:
    that:
      - result.changed is defined
      - result.changed == true
      - result.msg == "All items completed"
    fail_msg: "unable to delete all created compute profiles"
    success_msg: "All compute profiles deleted successfully"

- set_fact:
    todelete: []
