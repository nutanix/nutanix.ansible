- name:
  debug:
    msg: "Start ntnx_project update tests"

- name: Generate random project_name
  set_fact:
    random_name: "{{query('community.general.random_string',numbers=false, special=false,length=12)[0]}}"

- set_fact:
    suffix_name: "ansible-role-mapping"

- set_fact:
    project1_name: "{{random_name}}{{suffix_name}}1"


- name: Create Project
  ntnx_projects:
    name: "{{project1_name}}"
    desc: desc-123
    subnets:
      - name: "{{ network.dhcp.name }}"
    default_subnet:
      name: "{{ network.dhcp.name }}"
    users:
      - "{{ users[0] }}"
    resource_limits:
      - resource_type: STORAGE
        limit: 1024
  register: result
  ignore_errors: true

- name: Creation Status
  assert:
    that:
      - result.response is defined
      - result.response.status.state == 'COMPLETE'
    fail_msg: "Unable to create project"
    success_msg: "Project created successfully"

- set_fact:
    todelete: "{{ todelete + [  result.project_uuid ] }}"
#################################################################

- name: Check check mode for update
  check_mode: yes
  ntnx_projects:
    project_uuid: "{{ result.project_uuid }}"
    desc: desc-123-updated
    clusters:
      - "{{ cluster.uuid }}"
    subnets:
      - uuid: "{{ static.uuid }}"
    default_subnet:
      uuid: "{{ static.uuid }}"
    users:
      - "{{ users[1] }}"
    external_user_groups:
      - "{{ user_groups[0] }}"
    resource_limits:
      - resource_type: MEMORY
        limit: 2046
  register: result
  ignore_errors: true

- name: Check mode Status
  assert:
    that:
      - result.response is defined
      - result.changed == false
      - result.response.spec.description == 'desc-123-updated'
      - result.response.spec.resources.resource_domain.resources[0].limit == 2046
      - result.response.spec.resources.resource_domain.resources[0].resource_type == 'MEMORY'
      - result.response.spec.resources.user_reference_list[0].uuid == "{{ users[1] }}"
      - result.response.spec.resources.external_user_group_reference_list[0].uuid == "{{ user_groups[0] }}"
      - result.response.spec.resources.subnet_reference_list[0].uuid == "{{ static.uuid }}"
      - result.response.spec.resources.default_subnet_reference.uuid == "{{ static.uuid }}"
      - result.response.spec.resources.cluster_reference_list[0].uuid == "{{ cluster.uuid }}"

    fail_msg: "Check mode response for update is incorrect"
    success_msg: "Check mode response for update verified successfully"

#################################################################

- name: Update project. Change subnets, users, quotas and add vpcs
  ntnx_projects:
    project_uuid: "{{ result.project_uuid }}"
    desc: desc-123-updated
    clusters:
      - "{{ cluster.uuid }}"
    subnets:
      - uuid: "{{ static.uuid }}"
    default_subnet:
      uuid: "{{ static.uuid }}"
    users:
      - "{{ users[1] }}"
    external_user_groups:
      - "{{ user_groups[0] }}"
    resource_limits:
      - resource_type: STORAGE
        limit: 2046
    accounts:
      - uuid: "{{accounts[0].uuid}}"
    vpcs:
      - uuid: "{{vpc.uuid}}"
  register: result
  ignore_errors: true

- name: Update Status
  assert:
    that:
      - result.response is defined
      - result.changed == true
      - result.response.status.state == 'COMPLETE'
      - result.response.status.description == 'desc-123-updated'
      - result.response.status.resources.resource_domain.resources[0].limit == 2046
      - result.response.status.resources.resource_domain.resources[0].resource_type == 'STORAGE'
      - result.response.status.resources.user_reference_list[0].uuid == "{{ users[1] }}"
      - result.response.status.resources.external_user_group_reference_list[0].uuid == "{{ user_groups[0] }}"
      - result.response.status.resources.subnet_reference_list[0].uuid == "{{ static.uuid }}"
      - result.response.status.resources.default_subnet_reference.uuid == "{{ static.uuid }}"
      - result.response.status.resources.cluster_reference_list[0].uuid == "{{ cluster.uuid }}"
      - result.response.status.resources.vpc_reference_list[0].uuid == "{{ vpc.uuid }}"
      - result.response.status.resources.account_reference_list[0].uuid == "{{ accounts[0].uuid }}"

    fail_msg: "Project update failed"
    success_msg: "Project updated successfully"

#################################################################

- name: Idempotency check
  ntnx_projects:
    project_uuid: "{{ result.project_uuid }}"
    desc: desc-123-updated
    subnets:
      - uuid: "{{ static.uuid }}"
    default_subnet:
      uuid: "{{ static.uuid }}"
    users:
      - "{{ users[1] }}"
    external_user_groups:
      - "{{ user_groups[0] }}"
    resource_limits:
      - resource_type: STORAGE
        limit: 2046
    accounts:
      - name: "{{accounts[0].name}}"
    vpcs:
      - uuid: "{{vpc.uuid}}"
  register: result
  ignore_errors: true

- name: Creation Status
  assert:
    that:
      - result.changed == false
      - "'Nothing to update' in result.msg"
    fail_msg: "Project update didnt got skipped for update spec same as existing project"
    success_msg: "Project got skipped successfully for no change in spec"

#################################################################

- name: Delete all Created Projects
  ntnx_projects:
    state: absent
    project_uuid: "{{ item }}"
  register: result
  loop: "{{ todelete }}"
  ignore_errors: True

- set_fact:
    todelete: []
