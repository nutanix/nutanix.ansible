---
- name: Generate random name
  ansible.builtin.set_fact:
    random_name: "{{ query('community.general.random_string', numbers=false, special=false, length=12) }}"

- name: Set acp name
  ansible.builtin.set_fact:
    acp1_name: "{{ random_name[0] }}1"

- name: Create ACP with all specifications
  ntnx_acps:
    state: present
    name: "{{ acp1_name }}"
    role:
      uuid: "{{ acp.role.uuid }}"
    user_uuids:
      - "{{ acp.user_uuid }}"
    user_group_uuids:
      - "{{ acp.user_group_uuid }}"
    filters:
      - scope_filter:
          - lhs: PROJECT
            operator: IN
            rhs:
              uuid_list:
                - "{{ project.uuid }}"
        entity_filter:
          - lhs: ALL
            operator: IN
            rhs:
              collection: ALL
  register: result
  ignore_errors: true

- name: Creation Status
  ansible.builtin.assert:
    that:
      - result.response is defined
      - result.response.status.state == 'COMPLETE'
      - result.response.status.resources.role_reference.uuid == "{{ acp.role.uuid }}"
      - result.response.status.resources.user_reference_list.0.uuid == "{{ acp.user_uuid }}"
      - result.response.status.resources.user_group_reference_list.0.uuid == "{{ acp.user_group_uuid }}"
      - result.response.status.resources.filter_list.context_list.0.entity_filter_expression_list.0.operator == "IN"
      - result.response.status.resources.filter_list.context_list.0.entity_filter_expression_list.0.left_hand_side.entity_type == "ALL"
      - result.response.status.resources.filter_list.context_list.0.entity_filter_expression_list.0.right_hand_side.collection == "ALL"
      - result.response.status.resources.filter_list.context_list.0.scope_filter_expression_list.0.operator == "IN"
      - result.response.status.resources.filter_list.context_list.0.scope_filter_expression_list.0.left_hand_side == "PROJECT"
      - result.response.status.resources.filter_list.context_list.0.scope_filter_expression_list.0.right_hand_side.uuid_list.0 == "{{ project.uuid }}"
    fail_msg: " Unable to Create ACP all specifications "
    success_msg: " ACP with all specifications created successfully "

- name: Delete acp with check mode
  ntnx_acps:
    state: absent
    acp_uuid: "{{ result.response.metadata.uuid }}"
  register: output
  ignore_errors: true
  check_mode: true

- name: Delete acp with check mode Status
  ansible.builtin.assert:
    that:
      - output.failed == false
      - output.changed == false
      - output.msg =="Acp with uuid:{{  result.response.metadata.uuid }} will be deleted."
      - output.acp_uuid == "{{ result.response.metadata.uuid  }}"
    fail_msg: "Delete acp with check mode failed"
    success_msg: "Delete acp with check mode passed"

- name: Delete acp
  ntnx_acps:
    state: absent
    acp_uuid: "{{ result.acp_uuid }}"
  register: output
  ignore_errors: true

- name: Creation Status
  ansible.builtin.assert:
    that:
      - output.response is defined
      - output.response.status == 'SUCCEEDED'
      - output.failed == false
      - output.changed == true
      - output.acp_uuid == "{{ result.acp_uuid }}"
    fail_msg: " Unable to delete ACP with all specifications "
    success_msg: " ACP has been deleted successfully "
