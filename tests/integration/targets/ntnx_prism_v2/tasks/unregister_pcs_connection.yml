---
- name: Start Unregister PC-PC connection (removing PC as availbility_zone) tests
  ansible.builtin.debug:
    msg: Start Unregister PC-PC connection (removing PC as availbility_zone) tests

#############################################################
# List all clusters to get prism central external ID

- name: List all clusters to get prism central external ID
  nutanix.ncp.ntnx_clusters_info_v2:
    filter: "config/clusterFunction/any(t:t eq Clustermgmt.Config.ClusterFunctionRef'PRISM_CENTRAL')"
  register: result
  ignore_errors: true

- name: Get prism central external ID
  ansible.builtin.set_fact:
    domain_manager_ext_id: "{{ result.response[0].ext_id }}"

#############################################################
# Generate spec for unregistering a PC
# Unregister PC

- name: Generate spec for unregistering a PC
  nutanix.ncp.ntnx_pc_unregistration_v2:
    pc_ext_id: "e11acc65-479e-3aa2-9a98-1172e0c8b38a"
    ext_id: "b3a6932b-f64e-49ee-924d-c5a5b8ce2f3f"
  register: result
  ignore_errors: true
  check_mode: true

- name: Generate spec for unregistering a PC status
  ansible.builtin.assert:
    that:
      - result.response is defined
      - result.response.ext_id == "b3a6932b-f64e-49ee-924d-c5a5b8ce2f3f"
      - result.pc_ext_id == "e11acc65-479e-3aa2-9a98-1172e0c8b38a"
    fail_msg: "Generate spec for unregistering a PC failed"
    success_msg: "Generate spec for unregistering a PC passed"

- name: Unregister PC
  nutanix.ncp.ntnx_pc_unregistration_v2:
    ext_id: "{{ availability_zone_pc_uuid }}"
    pc_ext_id: "{{ domain_manager_ext_id }}"
  register: result
  ignore_errors: true

- name: Unregister PC status
  ansible.builtin.assert:
    that:
      - result.response is defined
      - result.response.ext_id == result.task_ext_id
      - result.pc_ext_id == domain_manager_ext_id
      - result.response.status == "SUCCEEDED"
    fail_msg: "Unregister PC failed"
    success_msg: "Unregister PC passed"
