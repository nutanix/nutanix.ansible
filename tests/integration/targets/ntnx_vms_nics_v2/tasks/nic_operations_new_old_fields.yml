---
- name: Create Direct type NIC with dynamic IP - both old and new fields with same values
  nutanix.ncp.ntnx_vms_nics_v2:
    vm_ext_id: "{{ vm_uuid }}"
    state: present
    backing_info:
      model: "VIRTIO"
      is_connected: true
    nic_backing_info:
      virtual_ethernet_nic:
        model: "VIRTIO"
        is_connected: true
    network_info:
      nic_type: "DIRECT_NIC"
      subnet:
        ext_id: "{{ static.uuid }}"
      vlan_mode: "ACCESS"
      should_allow_unknown_macs: false
      ipv4_config:
        should_assign_ip: true
    nic_network_info:
      virtual_ethernet_nic_network_info:
        nic_type: "DIRECT_NIC"
        subnet:
          ext_id: "{{ static.uuid }}"
        vlan_mode: "ACCESS"
        should_allow_unknown_macs: false
        ipv4_config:
          should_assign_ip: true
  register: result
  ignore_errors: true

- name: Create Direct type NIC with dynamic IP - both old and new fields with same values Status
  ansible.builtin.assert:
    that:
      - result.response is defined
      - result.changed == true
      - result.failed == false
      - result.vm_ext_id == "{{ vm_uuid }}"
      - result.ext_id is defined
      - result.response.network_info.nic_type == "DIRECT_NIC"
      - result.response.network_info.subnet.ext_id == "{{ static.uuid }}"
      - result.response.network_info.vlan_mode == "ACCESS"
      - result.response.network_info.should_allow_unknown_macs == false
      - result.response.nic_network_info.nic_type == "DIRECT_NIC"
      - result.response.nic_network_info.subnet.ext_id == "{{ static.uuid }}"
      - result.response.nic_network_info.vlan_mode == "ACCESS"
      - result.response.nic_network_info.should_allow_unknown_macs == false
      - result.response.backing_info.is_connected == true
      - result.response.network_info.ipv4_config.ip_address.value is defined
      - result.response.nic_backing_info.is_connected == true
      - result.response.nic_network_info.ipv4_config.ip_address.value is defined
    fail_msg: "Create Direct type NIC with dynamic IP - both old and new fields with same values failed "
    success_msg: "Create Direct type NIC with dynamic IP - both old and new fields with same values passed "

################################################################################

- name: Create Direct type NIC with dynamic IP - both old and new fields with different values
  nutanix.ncp.ntnx_vms_nics_v2:
    vm_ext_id: "{{ vm_uuid }}"
    state: present
    backing_info:
      model: "E1000"
      is_connected: false
    nic_backing_info:
      virtual_ethernet_nic:
        model: "VIRTIO"
        is_connected: true
    network_info:
      nic_type: "DIRECT_NIC"
      vlan_mode: "TRUNK"
      trunked_vlans:
        - 0
        - 1
      should_allow_unknown_macs: false
    nic_network_info:
      virtual_ethernet_nic_network_info:
        nic_type: "DIRECT_NIC"
        subnet:
          ext_id: "{{ static.uuid }}"
        vlan_mode: "ACCESS"
        should_allow_unknown_macs: false
        ipv4_config:
          should_assign_ip: true
  register: result
  ignore_errors: true

- name: Create Direct type NIC with dynamic IP Status
  ansible.builtin.assert:
    that:
      - result.response is defined
      - result.changed == true
      - result.failed == false
      - result.vm_ext_id == "{{ vm_uuid }}"
      - result.ext_id is defined
      - result.response.network_info.nic_type == "DIRECT_NIC"
      - result.response.network_info.subnet.ext_id == "{{ static.uuid }}"
      - result.response.network_info.vlan_mode == "ACCESS"
      - result.response.network_info.should_allow_unknown_macs == false
      - result.response.nic_network_info.nic_type == "DIRECT_NIC"
      - result.response.nic_network_info.subnet.ext_id == "{{ static.uuid }}"
      - result.response.nic_network_info.vlan_mode == "ACCESS"
      - result.response.nic_network_info.should_allow_unknown_macs == false
      - result.response.backing_info.is_connected == true
      - result.response.network_info.ipv4_config.ip_address.value is defined
      - result.response.nic_backing_info.is_connected == true
      - result.response.nic_network_info.ipv4_config.ip_address.value is defined
    fail_msg: "Create Direct type NIC with dynamic IP - both old and new fields with different values failed "
    success_msg: "Create Direct type NIC with dynamic IP - both old and new fields with different values passed "

