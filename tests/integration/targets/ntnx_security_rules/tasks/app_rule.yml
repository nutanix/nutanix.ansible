- name: create app security rule with inbound and outbound list
  ntnx_security_rules:
    name: test_app_rule
    app_rule:
      target_group:
          categories:
            apptype: Apache_Spark
            apptype_filter_by_category:
              AppFamily:
                - Backup
            apptiers:
              - "{{categories.apptiers[0]}}"
              - "{{categories.apptiers[1]}}"

          default_internal_policy: DENY_ALL

      inbounds:
        -
            categories:
              AppFamily:
                - Databases
                - DevOps
            description: test description
            protocol:
              tcp:
                - start_port: 22
                  end_port: 80
        -
            categories:
              AppFamily:
                - Databases
                - DevOps
            protocol:
                icmp:
                  - code: 1
                    type: 1
        -
            categories:
              AppFamily:
                - Databases
                - DevOps
            protocol:
              udp:
                - start_port: 82
                  end_port: 8080
        -
            categories:
              AppFamily:
                - Databases
                - DevOps
            protocol:
              service:
                name: 6a44
        -
            ip_subnet:
              prefix_length: 24
              ip: 192.168.1.0
            description: test description
        -
          address:
            name: dest
      outbounds:
        -
            categories:
              AppFamily:
                - Databases
                - DevOps
            protocol:
              icmp:
                - code: 1
                  type: 1
      policy_mode: MONITOR
    allow_ipv6_traffic: true
    policy_hitlog: true
  register: result
  ignore_errors: true


- name: Creation Status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.response.status.state == 'COMPLETE'
      - result.response.status.name=="test_app_rule"
      - result.response.status.resources.app_rule.target_group.filter.params.AppTier | length == 2
    fail_msg: ' fail: unable to create app security rule with inbound and outbound list'
    success_msg: 'pass: create app security rule with inbound and outbound list successfully'

- name: update app security rule by adding to outbound list and remove tule from inbound list
  ntnx_security_rules:
    security_rule_uuid: '{{ result.response.metadata.uuid }}'
    app_rule:
      policy_mode: APPLY
      inbounds:
        -
          rule_id: "{{result.response.spec.resources.app_rule.inbound_allow_list.0.rule_id}}"
          state: absent
      outbounds:
          -
            protocol:
              icmp:
                - code: 1
                  type: 1
            categories:
                AppFamily:
                  - Databases
                  - DevOps
  register: result
  ignore_errors: true

- name: Creation Status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.response.status.state == 'COMPLETE'
      - result.response.spec.resources.app_rule.action == "APPLY"
      - result.response.spec.resources.app_rule.outbound_allow_list.0.icmp_type_code_list is defined
    fail_msg: ' fail: unable to update app security rule with   outbound list '
    success_msg: 'pass :update app security rule with   outbound list successfully'

- name: delete app security rule
  ntnx_security_rules:
    state: absent
    security_rule_uuid: '{{ result.response.metadata.uuid }}'
  register: result
  ignore_errors: true

- name: Creation Status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.response.status == 'SUCCEEDED'
    fail_msg: ' fail: unable to delete app security rule '
    success_msg: 'pass : delete app security rule successfully'
- name: create app security rule with allow all inbound and outbound list
  ntnx_security_rules:
    name: test_app_rule
    app_rule:
      target_group:
          categories:
            apptype: Apache_Spark
            apptype_filter_by_category:
              AppFamily:
                - Backup
            apptiers:
              - "{{categories.apptiers[0]}}"
              - "{{categories.apptiers[1]}}"
          default_internal_policy: DENY_ALL
      allow_all_outbounds: true
      allow_all_inbounds: true
      policy_mode: MONITOR
    allow_ipv6_traffic: true
    policy_hitlog: true
  register: result
  ignore_errors: true

- name: Creation Status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.response.status.state == 'COMPLETE'
      - result.response.spec.name=="test_app_rule"
      - result.response.status.resources.app_rule.target_group.filter.params.AppTier | length == 2

    fail_msg: ' fail: unable to create app security rule with allow all inbound and outbound list'
    success_msg: 'pass: create app security rule with allow all inbound and outbound list successfully'
- name: delete app security rule
  ntnx_security_rules:
    state: absent
    security_rule_uuid: '{{ result.response.metadata.uuid }}'
  register: result
  ignore_errors: true

- name: Creation Status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.response.status == 'SUCCEEDED'
    fail_msg: ' fail: unable to delete app security rule '
    success_msg: 'pass : delete app security rule successfully'
