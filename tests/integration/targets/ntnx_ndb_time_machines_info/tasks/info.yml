---
- debug:
    msg: Start testing ntnx_ndb_time_machines_info

- name: List all NDB tms
  ntnx_ndb_time_machines_info:
  register: tms

- name: check listing status
  assert:
    that:
      - tms.response is defined
      - tms.failed == false
      - tms.changed == false
      - tms.response | length > 0
    fail_msg: "Unable to list all NDB tms"
    success_msg: "NDB tms listed successfully"
################################################################
- name: List all NDB tms using filter
  ntnx_ndb_time_machines_info:
    filters:
      value_type: name
      value: "{{tms.response[0].name}}"
  register: result

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response | length > 0
      - result.response[0].id == "{{tms.response[0].id}}"
    fail_msg: "Unable to list all NDB tms using filter"
    success_msg: "NDB tms listed successfully using filter"
################################################################
- name: get NDB tms using it's name
  ntnx_ndb_time_machines_info:
    name: "{{tms.response[0].name}}"
  register: result


- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response.id == "{{tms.response[0].id}}"
    fail_msg: "Unable to get NDB tms using it's name  "
    success_msg: "get  NDB tms using it's name  successfully"
################################################################
- name: List tms use id
  ntnx_ndb_time_machines_info:
    uuid: "{{tms.response[0].id}}"
  register: result

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response.name == "{{tms.response[0].name}}"
    fail_msg: "Unable to get NDB tms using it's id  "
    success_msg: "get  NDB tms using it's id  successfully"

################################################################

- name: List tms use id and load database as well
  ntnx_ndb_time_machines_info:
    uuid: "{{tms.response[0].id}}"
    filters:
      load_database: true
  register: result

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response.name == "{{tms.response[0].name}}"
      - result.response.database is defined
    fail_msg: "Unable to get NDB tms using it's id"
    success_msg: "get  NDB tms using it's id  successfully"

################################################################

- name: get NDB timemachine with incorrect name
  ntnx_ndb_time_machines_info:
    name: "abcd"
  register: result
  no_log: true
  ignore_errors: True

- name: check listing status
  assert:
    that:
      - result.error is defined
      - result.failed == true
      - result.changed == false
    fail_msg: "module didn't errored out correctly when incorrect name is given"
    success_msg: "module errored out correctly when incorrect name is given"
