---
- name: Start testing ntnx_foundation
  ansible.builtin.debug:
    msg: Start testing ntnx_foundation

- name: Get aos_packages_info from foundation
  ntnx_foundation_aos_packages_info:
  register: images

- name: Get aos package name with given version filter from all packages
  ansible.builtin.set_fact:
    aos_packages: "{{ images.aos_packages | select('search', aos_package_filter ) | list }}"

- name: List hypervisor images
  nutanix.ncp.ntnx_foundation_hypervisor_images_info:
  register: hypervisor_images

- name: Get hypervisor package info with given version filter from all packages
  ansible.builtin.set_fact:
    hypervisor_images: "{{ hypervisor_images.hypervisor_images.kvm | selectattr('filename', 'search', hypervisor_package_filter) | list }}"

###################################

- name: Image nodes with check mode
  check_mode: true
  ntnx_foundation:
    timeout: 3660
    nutanix_host: "{{foundation_host}}"
    cvm_gateway: "{{cvm_gateway}}"
    cvm_netmask: "{{cvm_netmask}}"
    hypervisor_gateway: "{{hypervisor_gateway}}"
    hypervisor_netmask: "{{hypervisor_netmask}}"
    default_ipmi_user: "{{default_ipmi_user}}"
    current_cvm_vlan_tag: "0"
    nos_package: "{{aos_packages[0]}}"
    blocks:
      - block_id: "{{IBIS_node.block_id}}"
        nodes:
          - manual_mode:
              cvm_gb_ram: 50
              cvm_ip: "{{IBIS_node.node1.cvm_ip}}"
              hypervisor_hostname: "{{IBIS_node.node1.hypervisor_hostname}}"
              ipmi_ip: "{{IBIS_node.node1.ipmi_ip}}"
              ipmi_password: "{{IBIS_node.node1.ipmi_password}}"
              hypervisor: "{{IBIS_node.node1.hypervisor}}"
              hypervisor_ip: "{{IBIS_node.node1.hypervisor_ip}}"
              node_position: "{{IBIS_node.node1.node_position}}"
    clusters:
      - redundancy_factor: 2
        cluster_members:
          - "{{IBIS_node.node1.cvm_ip}}"
        name: "test-cluster"
  register: result
  no_log: true

- name: Creation Status
  ansible.builtin.assert:
    that:
      - result.response is defined
      - result.failed==false
      - result.changed==false
      - result.response.blocks.0.nodes.0.cvm_ip=="{{IBIS_node.node1.cvm_ip}}"
      - result.response.blocks.0.nodes.0.hypervisor_hostname=="{{IBIS_node.node1.hypervisor_hostname}}"
      - result.response.blocks.0.nodes.0.ipmi_ip=="{{IBIS_node.node1.ipmi_ip}}"
      - result.response.blocks.0.nodes.0.hypervisor=="{{IBIS_node.node1.hypervisor}}"
      - result.response.blocks.0.nodes.0.node_position=="{{IBIS_node.node1.node_position}}"
      - result.response.clusters.0.cluster_name=="test-cluster"
    fail_msg: " Fail : check_mode fail"
    success_msg: "Succes: returned response as expected"

###################################
- name: Image bare metal, dos installed and aos running nodes and create cluster
  ntnx_foundation:
    timeout: 4500
    nutanix_host: "{{foundation_host}}"
    cvm_gateway: "{{cvm_gateway}}"
    cvm_netmask: "{{cvm_netmask}}"
    hypervisor_gateway: "{{hypervisor_gateway}}"
    hypervisor_netmask: "{{hypervisor_netmask}}"
    default_ipmi_user: "{{default_ipmi_user}}"
    current_cvm_vlan_tag: "0"
    nos_package: "{{aos_packages[0]}}"
    hypervisor_iso:
      kvm:
        filename: "{{hypervisor_images[0].filename}}"
    blocks:
      - block_id: "{{IBIS_node.block_id}}"
        nodes:
          - manual_mode:
              cvm_ip: "{{IBIS_node.node1.cvm_ip}}"
              cvm_gb_ram: 50
              hypervisor_hostname: "{{IBIS_node.node1.hypervisor_hostname}}"
              ipmi_netmask: "{{IBIS_node.node1.ipmi_netmask}}"
              ipmi_gateway: "{{IBIS_node.node1.ipmi_gateway}}"
              ipmi_ip: "{{IBIS_node.node1.ipmi_ip}}"
              ipmi_password: "{{IBIS_node.node1.ipmi_password}}"
              hypervisor: "{{IBIS_node.node1.hypervisor}}"
              hypervisor_ip: "{{IBIS_node.node1.hypervisor_ip}}"
              node_position: "{{IBIS_node.node1.node_position}}"
          - discovery_mode: # dos mode using cvm
              cvm_gb_ram: 50
              node_serial: "{{IBIS_node.node3.node_serial}}"
              device_hint: "vm_installer"
              discovery_override:
                hypervisor_hostname: "{{IBIS_node.node3.hypervisor_hostname}}"
                hypervisor_ip: "{{IBIS_node.node3.hypervisor_ip}}"
                cvm_ip: "{{IBIS_node.node3.cvm_ip}}"
                hypervisor: "{{IBIS_node.node3.hypervisor}}"
          - discovery_mode: # aos node using ipmi
              cvm_gb_ram: 50
              ipmi_password: "{{IBIS_node.node2.ipmi_password}}"
              node_serial: "{{IBIS_node.node2.node_serial}}"
              discovery_override:
                hypervisor_hostname: "{{IBIS_node.node2.hypervisor_hostname}}"
    clusters:
      - redundancy_factor: 2
        cvm_vip: "{{IBIS_node.cluster_virtual_ip}}"
        cluster_members:
          - "{{IBIS_node.node1.cvm_ip}}"
          - "{{IBIS_node.node3.cvm_ip}}"
          - "{{IBIS_node.node2.cvm_ip}}"
        name: "test-cluster"
  register: first_cluster
  ignore_errors: true
  no_log: true
  # when: false # make it true or remove to unskip task

- name: Creation Status
  ansible.builtin.assert:
    that:
      - first_cluster.response is defined
      - first_cluster.failed==false
      - first_cluster.changed==true
      - first_cluster.response.cluster_urls is defined
      - first_cluster.response.cluster_urls.0.name=="test-cluster"
    fail_msg: " Fail : unable to create cluster with three node"
    success_msg: "Succes: cluster with three node created successfully "
  # when: false # make it true or remove to unskip task
######################################################
