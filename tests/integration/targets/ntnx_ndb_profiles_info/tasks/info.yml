---
- debug:
    msg: Start testing ntnx_ndb_profiles_info

- name: List profiles
  ntnx_ndb_profiles_info:
  register: profiles
  ignore_errors: true


- name: check listing status
  assert:
    that:
      - profiles.response is defined
      - profiles.failed == false
      - profiles.changed == false
      - profiles.response | length > 0
    fail_msg: "Unable to list all NDB profile"
    success_msg: "NDB profiles listed successfully"
################################################################
- name: List profiles with postgres database engine
  ntnx_ndb_profiles_info:
    filters:
      engine: postgres_database
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response[0].engineType == "postgres_database"
    fail_msg: "Unable to list all NDB profile with postgres database engine"
    success_msg: "NDB profiles with postgres database engine listed successfully"
################################################################
- name: List Database_Parameter profiles
  ntnx_ndb_profiles_info:
    filters:
      type: Database_Parameter
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response[0].type == "Database_Parameter"
    fail_msg: "Unable to list all Database_Parameter NDB profile"
    success_msg: "Database_Parameter NDB profiles listed successfully"
################################################################
- name: List Network profiles
  ntnx_ndb_profiles_info:
    filters:
      type: Network
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response[0].type == "Network"
    fail_msg: "Unable to list all Network NDB profile"
    success_msg: "Network NDB profiles listed successfully"

################################################################
- name: get network profile with available IPs
  ntnx_ndb_profiles_info:
    name: "{{static_network_profile.name}}"
    include_available_ips: true
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response.available_ips | length > 0
      - result.response.id == "{{static_network_profile.uuid}}"

    fail_msg: "Unable to list network profile with available IPs"
    success_msg: "Network NDB profiles along with available IPs obtained successfully"

- name: get network profile with available IPs
  ntnx_ndb_profiles_info:
    uuid: "{{static_network_profile.uuid}}"
    include_available_ips: true
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response.available_ips | length > 0
      - result.response.id == "{{static_network_profile.uuid}}"
    fail_msg: "Unable to list network profile with available IPs"
    success_msg: "Network NDB profiles along with available IPs obtained successfully"
################################################################
- name: List Compute profiles
  ntnx_ndb_profiles_info:
    filters:
      type: Compute
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response[0].type == "Compute"
    fail_msg: "Unable to list all Compute NDB profile"
    success_msg: "Compute NDB profiles listed successfully"
################################################################
- name: List Software profiles
  ntnx_ndb_profiles_info:
    filters:
      type: Software
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response[0].type == "Software"
    fail_msg: "Unable to list all Software NDB profile"
    success_msg: "Software NDB profiles listed successfully"
################################################################
- name: get NDB profile using NDB profile name
  ntnx_ndb_profiles_info:
    name: "{{profiles.response[0].name}}"
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response.id == "{{profiles.response[0].id}}"
    fail_msg: "Unable to get NDB profile using NDB profile name"
    success_msg: "get NDB profile using NDB profile name finished successfully"
################################################################
- name: List profiles
  ntnx_ndb_profiles_info:
    uuid: "{{profiles.response[0].id}}"
    latest_version: true
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == false
      - result.changed == false
      - result.response.name == "{{profiles.response[0].name}}"
    fail_msg: "Unable to get NDB profile using NDB profile id"
    success_msg: "get NDB profile using NDB profile id finished successfully"
################################################################


- name: get NDB profiles with incorrect name
  ntnx_ndb_profiles_info:
    name: "abcd"
  register: result
  no_log: true
  ignore_errors: True

- name: check listing status
  assert:
    that:
      - result.error is defined
      - result.failed == true
      - result.changed == false
    fail_msg: "module didn't errored out correctly when incorrect name is given"
    success_msg: "module errored out correctly when incorrect name is given"
