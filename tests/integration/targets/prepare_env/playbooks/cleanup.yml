---
- name: Clean up the environment
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Include var file
      ansible.builtin.include_vars: ../vars/main.yml
    - name: Delete VM
      ignore_errors: true
      register: result
      nutanix.ncp.ntnx_vms:
        vm_uuid: "{{ vm.uuid }}"
        state: absent
        nutanix_host: "{{ ip }}"
        nutanix_username: "{{ username }}"
        nutanix_password: "{{ password }}"
        validate_certs: false
    #   # - name: Delete DR VM
    #   #   ntnx_vms:
    #   #     vm_uuid: '{{dr_vm.uuid }}'
    #   #     state: absent
    #   #     nutanix_host: "{{ ip }}"
    #   #     nutanix_username: "{{ username }}"
    #   #     nutanix_password: "{{ password }}"
    #   #     validate_certs: False
    - name: Delete overlay
      register: result
      ignore_errors: true
      nutanix.ncp.ntnx_subnets:
        state: absent
        nutanix_host: "{{ ip }}"
        nutanix_username: "{{ username }}"
        nutanix_password: "{{ password }}"
        validate_certs: false
        subnet_uuid: "{{ item }}"
      loop:
        - "{{ overlay.uuid }}"
    - name: Delete vpc
      register: result
      ignore_errors: true
      nutanix.ncp.ntnx_vpcs:
        state: absent
        nutanix_host: "{{ ip }}"
        nutanix_username: "{{ username }}"
        nutanix_password: "{{ password }}"
        validate_certs: false
        vpc_uuid: "{{ vpc.uuid }}"
    - name: Delete subnets
      ignore_errors: true
      register: result
      nutanix.ncp.ntnx_subnets:
        state: absent
        nutanix_host: "{{ ip }}"
        nutanix_username: "{{ username }}"
        nutanix_password: "{{ password }}"
        validate_certs: false
        subnet_uuid: "{{ item }}"
      loop:
        - "{{ external_nat_subnet.uuid }}"
        - "{{ static.uuid }}"

    - name: Delete downloaded disk file
      ignore_errors: true
      register: result
      ansible.builtin.file:
        path: "{{ disk_image.dest }}"
        state: absent