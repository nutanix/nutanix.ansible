---
- name: IaaS Provisioning
  hosts: localhost
  gather_facts: false
  collections:
    - nutanix.ncp
  
  tasks:
  - name: include var file
    include_vars: ../vars/main.yml
  - name: External subnet with NAT
    ntnx_subnets:
      state: present
      nutanix_host: "{{ ip }}"
      validate_certs: false
      nutanix_username: "{{ username }}"
      nutanix_password: "{{ password }}"
      name: "{{external_nat_subnet.name}}"
      external_subnet:
        vlan_id: "{{external_nat_subnet.vlan_id}}"
        enable_nat: True
        cluster:
          name: "{{ cluster.name }}"
        ipam:
          network_ip: "{{ external_nat_subnet.network_ip }}"
          network_prefix: "{{ external_nat_subnet.network_prefix }}"
          gateway_ip: "{{ external_nat_subnet.gateway_ip_address }}"
          ip_pools:
            - start_ip: "{{ external_nat_subnet.dhcp.start_address }}"
              end_ip: "{{ external_nat_subnet.dhcp.end_address }}"
    register: result
    ignore_errors: true

  - name: Insert External subnet configuration block to vars
    blockinfile:
      path: ../vars/main.yml
      marker: "# {mark} ANSIBLE MANAGED BLOCK insertion 1"
      block: |
          external_subnet:
            name: "{{external_nat_subnet.name}}"
            uuid: "{{result.subnet_uuid}}"

  - name: Create min VPC with external_subnet uuid
    ntnx_vpcs:
      validate_certs: False
      state: present
      wait: true
      nutanix_host: "{{ ip }}"
      nutanix_username: "{{ username }}"
      nutanix_password: "{{ password }}"
      name: "{{vpc_name}}"
      external_subnets:
        - subnet_uuid: "{{ result.subnet_uuid }}"
    register: result
    ignore_errors: True
  - name: Insert  VPC configuration block to vars
    blockinfile:
      path: ../vars/main.yml
      marker: "# {mark} ANSIBLE MANAGED BLOCK insertion 2"
      block: |
          vpc:
            name: "{{vpc_name}}"
            uuid: "{{result.vpc_uuid}}"

  - name: VLAN subnet with IPAM
    ntnx_subnets:
      state: present
      nutanix_host: "{{ ip }}"
      wait: true
      validate_certs: false
      nutanix_username: "{{ username }}"
      nutanix_password: "{{ password }}"
      name: "{{static_name}}"
      vlan_subnet:
        vlan_id: 373
        virtual_switch:
          name: vs0
        cluster:
          name: "{{ cluster.name }}"
        ipam:
          network_ip: 10.30.30.0
          network_prefix: 24
          gateway_ip: 10.30.30.254
          ip_pools:
            - start_ip: 10.30.30.10
              end_ip: 10.30.30.90
    register: result
    ignore_errors: true
  - name: Insert VLAN subnet configuration block to var file
    blockinfile:
      path: ../vars/main.yml
      marker: "# {mark} ANSIBLE MANAGED BLOCK insertion 3"
      block: |
          static:
            name: "{{static_name}}"
            uuid: "{{result.subnet_uuid}}"
  - name: include var file
    include_vars: ../vars/main.yml
  - name: Overlay Subnet with minimum requirements
    ntnx_subnets:
      state: present
      nutanix_host: "{{ ip }}"
      validate_certs: false
      nutanix_username: "{{ username }}"
      nutanix_password: "{{ password }}"
      name: "{{overlay_name}}"
      overlay_subnet:
        vpc:
          uuid: "{{ vpc.uuid }}"
        ipam:
          network_ip: "{{overlay_subnet.network_ip}}"
          network_prefix: "{{overlay_subnet.network_prefix}}"
          gateway_ip: "{{overlay_subnet.gateway_ip}}"
    register: result
    ignore_errors: true
  - name: Insert overlay subnet configuration block to var file
    blockinfile:
      path: ../vars/main.yml
      marker: "# {mark} ANSIBLE MANAGED BLOCK insertion 4"
      block: |
          overlay:
            name: "{{overlay_name}}"
            uuid: "{{result.subnet_uuid}}"


  - name: VM with all specification
    ntnx_vms:
      state: present
      nutanix_host: "{{ ip }}"
      nutanix_username: "{{ username }}"
      nutanix_password: "{{ password }}"
      validate_certs: False
      name: "{{vm_name}}"
      cluster:
        uuid: "{{ cluster.uuid }}"
      networks:
          - is_connected: true
            subnet: 
              name: "{{overlay_name}}"
            private_ip: "{{overlay_subnet.private_ip}}"
    register: result
    ignore_errors: True 
  - name: Insert overlay subnet configuration block to var file
    blockinfile:
      path: ../vars/main.yml
      marker: "# {mark} ANSIBLE MANAGED BLOCK insertion 5"
      block: |
          vm:
            name: "{{vm_name}}"
            uuid: "{{result.vm_uuid}}"
