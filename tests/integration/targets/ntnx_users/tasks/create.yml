---
- debug:
    msg: "start ntnx_users  tests"
##################################################
- name: create local user  with check mode
  ntnx_users:
    principal_name: "{{principal_name}}"
    directory_service_uuid:  "{{directory_service_uuid}}"
    project:
      uuid: "{{project.uuid}}"
  register: result
  ignore_errors: true
  check_mode: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.changed == false
      - result.failed == false
      - result.user_uuid ==  None
      - result.response.spec.resources.directory_service_user.directory_service_reference.uuid == "{{directory_service_uuid}}"
    fail_msg: "fail: user created whil check mode on"
    success_msg: "pass: returned as expected"


#################################################
- name: create local user
  ntnx_users:
    principal_name: "{{principal_name}}"
    directory_service_uuid:  "{{directory_service_uuid}}"
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.changed == true
      - result.failed == false
      - result.user_uuid is defined
      - result.response.status.state == "COMPLETE"
      - result.response.status.name == "{{principal_name}}"
      - result.response.status.resources.directory_service_user.directory_service_reference.uuid == "{{directory_service_uuid}}"
    fail_msg: "fail"
    success_msg: "pass"

- set_fact:
      todelete: "{{ todelete + [  result.user_uuid ] }}"
#################################################
- name: Delete created users
  ntnx_users:
    state: absent
    user_uuid: "{{ item }}"
  loop: "{{ todelete }}"
  register: result
  ignore_errors: true
- name: check listing status
  assert:
    that:
      - result.changed == true
      - result.msg == "All items completed"
    fail_msg: "Fail: unable to delete all users"
    success_msg: "Pass: all users deleted successfully"
- set_fact:
    todelete: []
#################################################
- name: create local user  with project and categories
  ntnx_users:
    principal_name: "{{principal_name}}"
    directory_service_uuid:  "{{directory_service_uuid}}"
    project:
      uuid: "{{project.uuid}}"
    categories:
      Environment:
        - "Dev"
      AppType:
        - "Default"
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.changed == true
      - result.failed == false
      - result.user_uuid is defined
      - result.response.status.state == "COMPLETE"
      - result.response.status.name == "{{principal_name}}"
      - result.response.status.resources.directory_service_user.directory_service_reference.uuid == "{{directory_service_uuid}}"
    fail_msg: "fail"
    success_msg: "pass"

- set_fact:
      todelete: "{{ todelete + [  result.user_uuid ] }}"
#################################################
- name: create local user  not in the directory_service
  ntnx_users:
    principal_name: wrong_name
    directory_service_uuid:  "{{directory_service_uuid}}"
    project:
      uuid: "{{project.uuid}}"
    categories:
      Environment:
        - "Dev"
      AppType:
        - "Default"
  register: result
  ignore_errors: true

- name: check listing status
  assert:
    that:
      - result.response is defined
      - result.failed == true
      - result.changed == false
    fail_msg: "Fail: create wrong user"
    success_msg: "Pass: Returned as expected"
#################################################
# - name: create idp user
#   ntnx_users:
#     identity_provider_uuid: "{{identity_provider_uuid}}"
#     username: testing_user
#   register: result
#   ignore_errors: true

# - name: check listing status
#   assert:
#     that:
#       - result.response is defined
#       - result.changed == true
#       - result.failed == false
#       - result.user_uuid is defined
#       - result.response.status.state == "COMPLETE"
#       - result.response.status.name == "testing_user"
#     fail_msg: "Fail: unable to create idp user"
#     success_msg: "Pass: idp user created successfully"

# - set_fact:
#      todelete: "{{ todelete + [  result.user_uuid ] }}"
#################################################
- name: Delete created users
  ntnx_users:
    state: absent
    user_uuid: "{{ item }}"
  loop: "{{ todelete }}"
  register: result
  ignore_errors: true
- name: check listing status
  assert:
    that:
      - result.changed == true
      - result.msg == "All items completed"
    fail_msg: "Fail: unable to delete all users"
    success_msg: "Pass: all users deleted successfully"
- set_fact:
    todelete: []

############# DELETE TEST ##############################

- name: create local user
  ntnx_users:
    principal_name: "{{principal_name}}"
    directory_service_uuid:  "{{directory_service_uuid}}"
    project:
      uuid: "{{project.uuid}}"
  register: result
  ignore_errors: true

- name: Delete created user
  ntnx_users:
    state: absent
    user_uuid: "{{ result.user_uuid }}"
  register: result
  ignore_errors: true

- name: check delete status
  assert:
    that:
      - result.changed == true
      - result.response is defined
      - result.response.status == 'SUCCEEDED'
    fail_msg: "Fail: unable to delete users"
    success_msg: "Pass: users deleted successfully"
