---
- name: Test Inventory Plugin for FQDN
  hosts: all
  gather_facts: false
  vars_files:
    - nutanix.yml
  tasks:
    - name: Assert the number of VMs in case of fetch_all_vms is false # noqa run-once[task]
      ansible.builtin.assert:
        that:
          - ansible_play_hosts | length <= data.length
        fail_msg: "No hosts found in inventory!"
        success_msg: "Found {{ ansible_play_hosts | length }} hosts in inventory!"
      run_once: true
      when: not fetch_all_vms

    - name: Assert the number of VMs in case of fetch_all_vms is true # noqa run-once[task]
      ansible.builtin.assert:
        that:
          - ansible_play_hosts | length >= 0
        fail_msg: "No hosts found in inventory!"
        success_msg: "Found {{ ansible_play_hosts | length }} hosts in inventory!"
      run_once: true
      when: fetch_all_vms

    - name: Assert that host vars are defined like ansible_host, uuid, name, cluster
      ansible.builtin.assert:
        that:
          - hostvars[inventory_hostname].ansible_host is defined
          - hostvars[inventory_hostname].uuid is defined
          - hostvars[inventory_hostname].name is defined
          - hostvars[inventory_hostname].cluster is defined
        fail_msg: "Host vars not found for {{ inventory_hostname }}"
        success_msg: "Host vars found for {{ inventory_hostname }}"

    - name: Set host FQDN from hostvars
      ansible.builtin.set_fact:
        host_fqdn: "{{ hostvars[inventory_hostname].ansible_host }}"

    - name: Set expected FQDN
      ansible.builtin.set_fact:
        expected_fqdn: >-
          {{
            hostvars[inventory_hostname].name
            ~ '.nutanix1.'
            ~ hostvars[inventory_hostname].cluster
            ~ '.nutanix2.'
            ~ (hostvars[inventory_hostname].cluster_uuid | default(''))
            ~ '.nutanix3.'
            ~ hostvars[inventory_hostname].uuid
            ~ '.nutanix4.com'
          }}

    - name: Assert that host_fqdn matches the expected FQDN expression
      ansible.builtin.assert:
        that:
          - host_fqdn == expected_fqdn
        fail_msg: "host_fqdn does not match the expected FQDN expression for {{ inventory_hostname }} (expected: {{ expected_fqdn }}, got: {{ host_fqdn }})"
        success_msg: "host_fqdn matches the expected FQDN expression for {{ inventory_hostname }}"
